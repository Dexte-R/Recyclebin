#!/bin/bash

function getOps() {
	opt_i=false # -i interactive mode
	opt_v=false # -v verbose mode
	opt_r=false # -r recursive mode
	while getopts :ivr opt
	do
		case $opt in
			i)	opt_i=true ;;
			v)	opt_v=true ;;
			r)	opt_r=true ;;
			*)	echo Bad Option - $OPTARG
				exit 5 ;;
		esac
	done
}

function isRecyclebin() {
	# This function checks if recyclebin is found in $HOME/recyclebin; directory created if not found.
	recyclePath="$HOME/recyclebin"
	if [[ ! -d $recyclePath ]]
	then
		echo Recyclebin not found.
		mkdir $recyclePath
		echo Created recyclebin at $recyclePath
	fi
}

function getName() {
	# This function converts relative path to absolute path.
	absolutePath=$(readlink -e $1)
	fileName=$(basename $absolutePath)
	folderPath=$(dirname $absolutePath)
}

function inputIsGiven() {
	if [[ -z $1 ]]
	then
		echo Please input file name
		exit 1
	fi
}

function isFile() {
	if [[ ! -f $1 ]]
	then
		echo $1 does not exists
		
		if [[ -z $2 ]]
		then
			exit 3
		else
			return 1
		fi	
	fi
	
	return 0

}

function isDir() {
	# Checks if input is directory
	if [[ -d $1 ]]
	then
		echo Directory not allowed
		exit 2
	fi
}

function fileIsAllowed() {
	# This function prevents user from removing restore/recycle script and logfile.
	if [[ $folderPath = "$HOME/project" ]]
	then
		if [[ $fileName = "recycle" || $fileName = "restore" ]]
		then
			echo File not allowed to be removed.
			exit 4
		fi
	fi

	if [[ $folderPath = $HOME && $fileName = ".restore.info" ]]
	then
		echo File not allowed to be removed.
		exit 4
	fi
}


function recycleFile() {
	inode=$(ls -i $1 | cut -d" " -f1)
	outputName="$fileName"_"$inode"
	outputPath="$recyclePath/$outputName"

	if $opt_i
	then
		read -p "Recycle file "\'$1\'"? " isRecycle
	else
		isRecycle="y"
	fi
	
	case $isRecycle in
		[yY]*)
			cp $1 $outputPath # copy file to recyclebin, rename to fileName_inode
			rm $1 ;; # remove input file
		*)
			if [[ -z $2 ]]
			then
				exit 0
			else
				return 0 
			fi ;;
	esac
			
	if $opt_v
	then
		echo removed \'$1\'
	fi
	updateLog
	return 0
}

function recycleDir() {
	# This function recycles all files in directory if -r flag passed.

	for eachFile in "$1"/*
	do
		getName $eachFile
		recycleFile $eachFile	
	done
	
	if [[ -z $(ls $1) ]]
	then
		rmdir $1
	fi
}

function isLog() {
	logPath="$HOME/.restore.info"
	if [[ ! -f $logPath ]]
	then
		touch $logPath
	fi	
}

function updateLog() {
	echo "$outputName":"$absolutePath" >> $HOME/.restore.info
}

###############		MAIN	#################

getOps $*
isRecyclebin
isLog
shift $(($OPTIND - 1))
while [[ $# != 0 ]]
do
	inputIsGiven $*

	if ! $opt_r
	then
		isDir $*		
		if ! isFile $*
		then
			shift
			continue
		fi
		getName $*
		fileIsAllowed
	fi
	
	if [[ -f $* ]]
	then
		if recycleFile $*
		then
			shift
			continue
		fi
		updateLog
		shift
	fi
	
	if $opt_r
	then
		recycleDir $*
		updateLog
		shift
	fi	
done
exit 0
